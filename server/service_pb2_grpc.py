# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import service_pb2 as service__pb2


class TemperatureControllerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetTemperature = channel.unary_unary(
        '/TemperatureController/SetTemperature',
        request_serializer=service__pb2.TemperatureSetRequest.SerializeToString,
        response_deserializer=service__pb2.TemperatureSetResponse.FromString,
        )
    self.GetTemperature = channel.unary_stream(
        '/TemperatureController/GetTemperature',
        request_serializer=service__pb2.GetTemperatureRequest.SerializeToString,
        response_deserializer=service__pb2.GetTemperatureResponse.FromString,
        )
    self.SetOverrides = channel.unary_unary(
        '/TemperatureController/SetOverrides',
        request_serializer=service__pb2.SetOverridesRequest.SerializeToString,
        response_deserializer=service__pb2.SetOverridesResponse.FromString,
        )


class TemperatureControllerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SetTemperature(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTemperature(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetOverrides(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TemperatureControllerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetTemperature': grpc.unary_unary_rpc_method_handler(
          servicer.SetTemperature,
          request_deserializer=service__pb2.TemperatureSetRequest.FromString,
          response_serializer=service__pb2.TemperatureSetResponse.SerializeToString,
      ),
      'GetTemperature': grpc.unary_stream_rpc_method_handler(
          servicer.GetTemperature,
          request_deserializer=service__pb2.GetTemperatureRequest.FromString,
          response_serializer=service__pb2.GetTemperatureResponse.SerializeToString,
      ),
      'SetOverrides': grpc.unary_unary_rpc_method_handler(
          servicer.SetOverrides,
          request_deserializer=service__pb2.SetOverridesRequest.FromString,
          response_serializer=service__pb2.SetOverridesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'TemperatureController', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
